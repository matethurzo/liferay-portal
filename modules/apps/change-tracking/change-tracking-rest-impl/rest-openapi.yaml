components:
    schemas:
        AffectedEntry:
            properties:
                contentType:
                    type: string
                title:
                    type: string
            type: object
        Collection:
            properties:
                additionCount:
                    format: int64
                    type: integer
                collectionId:
                    format: int64
                    type: integer
                companyId:
                    format: int64
                    type: integer
                dateStatus:
                    format: date-time
                    type: string
                deletionCount:
                    format: int64
                    type: integer
                description:
                    type: string
                modificationCount:
                    format: int64
                    type: integer
                name:
                    type: string
                statusByUserName:
                    type: string
            type: object
        CollectionType:
            default: "all"
            enum: [active, all, production, recent]
            type: string
        CollectionUpdate:
            properties:
                description:
                    type: string
                name:
                    type: string
            type: object
        Entry:
            properties:
                affectedByEntriesCount:
                    type: integer
                changeType:
                    type: integer
                classNameId:
                    format: int64
                    type: integer
                classPK:
                    format: int64
                    type: integer
                collision:
                    type: boolean
                contentType:
                    type: string
                ctEntryId:
                    format: int64
                    type: integer
                modifiedDate:
                    format: date-time
                    type: string
                resourcePrimKey:
                    format: int64
                    type: integer
                siteName:
                    type: string
                title:
                    type: string
                userName:
                    type: string
                version:
                    type: string
            type: object
        Settings:
            properties:
                changeTrackingAllowed:
                    type: boolean
                changeTrackingEnabled:
                    type: boolean
                checkoutCTCollectionConfirmationEnabled:
                    type: boolean
                companyId:
                    format: int64
                    type: integer
                supportedContentTypeLanguageKeys:
                    items:
                        type: string
                    type: array
                supportedContentTypes:
                    items:
                        type: string
                    type: array
                userId:
                    format: int64
                    type: integer
            type: object
        SettingsUpdate:
            properties:
                changeTrackingEnabled:
                    type: boolean
                checkoutCTCollectionConfirmationEnabled:
                    type: boolean
            type: object
info:
    description: ""
    title: "Change Tracking REST"
    version: v1.0
openapi: 3.0.1
paths:
    "/collections":
        get:
            operationId: getCollectionsPage
            parameters:
                - in: query
                  name: companyId
                  required: false
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  required: false
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  required: false
                  schema:
                      type: integer
                - in: query
                  name: sort
                  required: false
                  schema:
                      type: string
                - in: query
                  name: type
                  required: false
                  schema:
                      $ref: "#/components/schemas/CollectionType"
                - in: query
                  name: userId
                  required: false
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Collection"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Collection"
                                type: array
                    description: ""
            tags: ["Collection"]
        post:
            operationId: postCollection
            parameters:
                - in: query
                  name: companyId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: userId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CollectionUpdate"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/CollectionUpdate"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Collection"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Collection"
                    description: ""
                409:
                    content:
                        text/plain:
                            schema:
                                type: string
                    description: ""
                461:
                    content:
                        text/plain:
                            schema:
                                type: string
                    description: ""
                462:
                    content:
                        text/plain:
                            schema:
                                type: string
                    description: ""
                463:
                    content:
                        text/plain:
                            schema:
                                type: string
                    description: ""
            tags: ["Collection"]
    "/collections/{collectionId}":
        delete:
            operationId: deleteCollection
            parameters:
                - in: path
                  name: collectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    description: ""
                400:
                    content:
                        text/plain:
                            schema:
                                type: string
                    description: ""
                404:
                    description: ""
            tags: ["Collection"]
        get:
            operationId: getCollection
            parameters:
                - in: path
                  name: collectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Collection"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Collection"
                    description: ""
                400:
                    content:
                        text/plain:
                            schema:
                                type: string
                    description: ""
            tags: ["Collection"]
    "/collections/{collectionId}/checkout":
        post:
            operationId: postCollectionCheckout
            parameters:
                - in: path
                  name: collectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: userId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                202:
                    description: ""
            tags: ["Collection"]
    "/collections/{collectionId}/entries":
        get:
            operationId: getCollectionEntriesPage
            parameters:
                - in: path
                  name: collectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: changeTypesFilter
                  required: false
                  schema:
                      type: string
                - in: query
                  name: classNameIdsFilter
                  required: false
                  schema:
                      type: string
                - in: query
                  name: collision
                  required: false
                  schema:
                      type: boolean
                - in: query
                  name: groupIdsFilter
                  required: false
                  schema:
                      type: string
                - in: query
                  name: page
                  required: false
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  required: false
                  schema:
                      type: integer
                - in: query
                  name: sort
                  required: false
                  schema:
                      type: string
                - in: query
                  name: status
                  required: false
                  schema:
                      type: integer
                - in: query
                  name: userIdsFilter
                  required: false
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Entry"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Entry"
                                type: array
                    description: ""
            tags: ["Entry"]
    "/collections/{collectionId}/entries/{entryId}":
        get:
            operationId: getCollectionEntry
            parameters:
                - in: path
                  name: collectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: entryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Entry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Entry"
                    description: ""
            tags: ["Entry"]
    "/collections/{collectionId}/entries/{entryId}/affecteds":
        get:
            operationId: getCollectionEntryAffectedsPage
            parameters:
                - in: path
                  name: collectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: entryId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: keywords
                  required: false
                  schema:
                      type: string
                - in: query
                  name: page
                  required: false
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  required: false
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AffectedEntry"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AffectedEntry"
                                type: array
                    description: ""
            tags: ["AffectedEntry"]
    "/collections/{collectionId}/publish":
        post:
            operationId: postCollectionPublish
            parameters:
                - in: path
                  name: collectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: ignoreCollision
                  required: true
                  schema:
                      type: boolean
                - in: query
                  name: userId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                202:
                    description: ""
                400:
                    content:
                        text/plain:
                            schema:
                                type: string
                    description: ""
            tags: ["Collection"]
    "/settings":
        get:
            operationId: getSettingsPage
            parameters:
                - in: query
                  name: companyId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: userId
                  required: false
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Settings"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Settings"
                                type: array
                    description: ""
                400:
                    content:
                        text/plain:
                            schema:
                                type: string
                    description: ""
            tags: ["Settings"]
        put:
            operationId: putSettings
            parameters:
                - in: query
                  name: companyId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: userId
                  required: false
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SettingsUpdate"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/SettingsUpdate"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Settings"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Settings"
                    description: ""
                400:
                    content:
                        text/plain:
                            schema:
                                type: string
                    description: ""
            tags: ["Settings"]